{"version":3,"sources":["answer-component.ts"],"names":[],"mappings":"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","file":"answer-component.js","sourcesContent":["/**\n * Created by kfraser on 29/02/2016.\n */\nimport {Component, Inject, forwardRef} from 'angular2/core';\nimport {QuestionFeedComponent} from \"./question-feed.component\";\nimport {Question} from \"./models/question\";\nimport {Collapse} from \"ng2-bootstrap/ng2-bootstrap\";\nimport {BarGraphComponent} from \"./graphs/bar-graph.component\";\nimport {AnswerInputFormComponent} from \"./answer-form.component\";\nimport {HTTPService} from \"./services/http-service\";\nimport {Answer} from \"./models/answer\";\nimport {DoughnutChartComponent} from \"./graphs/doughnut-chart.component\";\n\ndeclare var io: any;\n\n@Component({\n    selector: 'answer-question',\n    templateUrl: 'views/answer_question.html',\n    inputs: ['question'],\n    directives: [Collapse, BarGraphComponent, AnswerInputFormComponent, DoughnutChartComponent],\n    providers: [HTTPService]\n})\n\n/**\n * This component is a modal that appears when the user clicks on a question in the\n * dashboard question feed. Includes an input form for answering questions.\n */\nexport class AnswerQuestionComponent{\n\n    socket = null;\n\n    public isCollapsedAnswer:boolean = true;\n    public isCollapsedStats:boolean = true;\n\n    question = new Question(\"\",\"\",\"\",[],[],\"\",\"\",\"\",\"\",\"\",\"\");\n    /**\n     * 1. Get the question that was clicked.\n     * 2. Create wells for each answer in the question.answer array.\n     * 3. Create an input field for adding an answer.\n     * 4. On submit, add the the answer to the question.answer array and update the question.\n     */\n    constructor(@Inject(forwardRef(() => QuestionFeedComponent))private _parent: QuestionFeedComponent,\n                private httpService: HTTPService){\n\n        this.socket = _parent.socket;\n        this.socket.on('answer', function(){\n            console.log('Message from server: answer feed to be updated!!');\n            this.getUpdatedSelectedQuestion();\n        }.bind(this));\n    }\n\n    updateQuestions(){\n        this._parent.updateQuestions();\n    }\n\n    getUpdatedSelectedQuestion(){\n        var updatedQuestion;\n        var json = JSON.stringify(this.question);\n        this.httpService.getSelectedQuestion(json).subscribe(\n            data => updatedQuestion = JSON.parse(JSON.stringify(data)),\n            error => alert(error),\n            () => this.setQuestion(updatedQuestion)\n        );\n    }\n\n    /**\n     * ToDo: This could be cleaned up to be more efficient.\n     * @param updatedQuestion\n     */\n    setQuestion(updatedQuestion){\n        var questionArray = [];\n        for(var item of updatedQuestion){\n            console.log((JSON.parse(JSON.stringify(item)).classid));\n            var question = new Question(\n                (JSON.parse(JSON.stringify(item)).classid),\n                (JSON.parse(JSON.stringify(item)).question),\n                (JSON.parse(JSON.stringify(item)).summary),\n                (JSON.parse(JSON.stringify(item)).choices),\n                (JSON.parse(JSON.stringify(item)).answers),\n                (JSON.parse(JSON.stringify(item)).userid),\n                (JSON.parse(JSON.stringify(item)).date),\n                (JSON.parse(JSON.stringify(item)).type),\n                (JSON.parse(JSON.stringify(item)).anonymous),\n                (JSON.parse(JSON.stringify(item)).username),\n                (JSON.parse(JSON.stringify(item)).picture));\n            this.question = question;\n        }\n\n        //this.question.answers = answers;answers;\n        console.log(this.question);\n    }\n}"],"sourceRoot":"/source/"}