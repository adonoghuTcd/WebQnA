{"version":3,"sources":["answer-form.component.ts"],"names":[],"mappings":"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","file":"answer-form.component.js","sourcesContent":["/**\n * Created by kfraser on 01/03/2016.\n */\nimport {Component, Inject, forwardRef} from 'angular2/core';\nimport {AnswerQuestionComponent} from \"./answer-component\";\nimport {Answer} from \"./models/answer\";\nimport {Question} from \"./models/question\";\nimport {HTTPService} from \"./services/http-service\";\nimport { CORE_DIRECTIVES, FORM_DIRECTIVES } from 'angular2/common';\nimport {BUTTON_DIRECTIVES} from \"ng2-bootstrap/ng2-bootstrap\"\n\ndeclare var io: any;\n\n@Component({\n    selector: 'answer-input-form',\n    templateUrl: 'views/answer_input_form.html',\n    inputs: ['selectedQuestion'],\n    providers: [HTTPService],\n    directives: [ BUTTON_DIRECTIVES, CORE_DIRECTIVES, FORM_DIRECTIVES ]\n})\n\n/**\n * This is a default component - intentionally empty (including the\n * html) as it's needed when a child must have a terminal state.\n */\nexport class AnswerInputFormComponent{\n\n    socket = null;\n\n    selectedQuestion: Question;\n    answerModel = new Answer(\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        JSON.parse(localStorage.getItem('profile')).name,\n        JSON.parse(localStorage.getItem('profile')).picture\n    );\n    public now:Date = new Date();\n    submitted: boolean = false;\n\n    constructor(@Inject(forwardRef(()=>AnswerQuestionComponent)) private _parent: AnswerQuestionComponent,\n                private httpService: HTTPService){\n        this.selectedQuestion = _parent.question;\n        this.socket = io('/');\n    }\n\n    onSubmit(){\n        this.submitted = true;\n\n        this.now = new Date();\n        this.answerModel.user = JSON.parse(localStorage.getItem('profile')).user_id;\n        this.answerModel.date = this.now.toString();\n\n\n        this.selectedQuestion.answers.push(this.answerModel);\n        console.log('this is the question');\n        console.log(this.selectedQuestion);\n        if(this.answerModel.answer != \"\"){\n            var json = JSON.stringify(this.selectedQuestion);\n            this.httpService.updateQuestion(json).subscribe(\n                data => console.log(JSON.stringify(data)),\n                error => alert(error),\n                () => this.sendUpdate()\n            );\n\n            this.answerModel = new Answer(\n                \"\",\n                \"\",\n                \"\",\n                \"\",\n                JSON.parse(localStorage.getItem('profile')).name,\n                JSON.parse(localStorage.getItem('profile')).picture\n            );\n\n            this._parent.isCollapsedAnswer = true;\n        }\n    }\n\n    sendUpdate(){\n        console.log(\"post answer success\")\n        this.socket.emit('update', 'answer');\n    }\n\n}"],"sourceRoot":"/source/"}