{"version":3,"sources":["app.component.ts"],"names":[],"mappings":"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","file":"app.component.js","sourcesContent":["/**\n * Important! - when using ng2-bootstrap library, this reference path\n * tag must be added to the top of the component implementing the feature\n * in order for the typescript to compile. (Gulp will throw an error otherwise).\n */\n\n/// <reference path=\"../typings/browser/definitions/moment/moment.d.ts\" />\n\nimport {DashboardComponent} from \"./dashboard.component\";\nimport {Component, View, provide, OnInit} from 'angular2/core';\nimport {RouteConfig, Router, APP_BASE_HREF, ROUTER_PROVIDERS, ROUTER_DIRECTIVES, CanActivate, OnActivate, ComponentInstruction} from 'angular2/router';\nimport {HTTP_PROVIDERS, Http} from 'angular2/http';\nimport {LandingComponent} from \"./landing.component\";\nimport {AboutComponent} from \"./about.component\";\nimport {AuthHttp, AuthConfig, tokenNotExpired, JwtHelper} from 'angular2-jwt';\nimport {Alert} from 'ng2-bootstrap/ng2-bootstrap';\nimport {HTTPService} from \"./services/http-service\";\n\n/**\n * Auth0Lock provided by Auth0. Controls the user interface for SSO.\n * see https://github.com/auth0/lock for details.\n */\ndeclare var Auth0Lock;\n\n@Component({\n    selector: 'app',\n    providers: [HTTPService]\n})\n\n@View({\n    directives: [ ROUTER_DIRECTIVES, DashboardComponent, Alert],\n    templateUrl: 'views/app.html'\n})\n\n/**\n * These are the possible routes from the app.component. The landing page is set as default.\n * It also implements Auth0 for SSO via the login button (as pop up).\n * There is also a user metrics dashboard with the implementation - useful!\n */\n@RouteConfig([\n    {path: '/', name: 'Landing', component: LandingComponent, useAsDefault: true},\n    {path: '/about', name: 'About', component: AboutComponent},\n    {path: '/dash', name: 'Dashboard', component: DashboardComponent}\n])\n\n/**\n * This is the landing page component. Mainly managing the nav bar elements\n * and checking whether or not a user is already logged in to a session.\n */\nexport class AppComponent implements OnInit {\n\n    /**\n     * Using the Lock interface with these options means it's embeddable in the page. The\n     * other option is the show() the Lock interface as a pop-up.\n     * ToDo: (Low priority) Decide which is better, the pop-up or the embedded version.\n     * The token response is the JWT necessary for user authentication throughout the application\n     * when navigating to routes with the @canActivate restriction and also necessary for Auth0\n     * api requests.\n     * @type {{container: string, responseType: string}}\n     */\n    options = {\n        //container: 'root',\n        responseType: 'token'\n    };\n\n    /**\n     * The lock instantiation requires the client id and domain respectively.\n     * ToDo: These hardcoded authentication values need to be removed from GitHub!\n     */\n    lock = new Auth0Lock('deuLbU0yLQDPCVHPaDrT8cA61JB8PCZ5', 'qanda.eu.auth0.com');\n    hash = this.lock.parseHash();\n    jwtHelper: JwtHelper = new JwtHelper();\n    thing: string;\n\n    /**\n     * The boolean which controls the login/logout button on the nav bar\n     * @type {boolean}\n     */\n    public  userLoggedIn: boolean = false;\n    public userProfile;\n\n    constructor(private _router:Router, public http: Http, public authHttp: AuthHttp,\n                private httpService: HTTPService) {}\n\n    /**\n     * On init must check if the user is logged in:\n     * ToDo: redirect to the dashboard if the user is already logged in.\n     *\n     */\n    ngOnInit() {\n        console.log('Checking if the user is logged in on init.');\n        if(tokenNotExpired()){\n            this.userLoggedIn = true;\n            this._router.navigateByUrl('/dash');\n        }\n    }\n\n    /**\n     * Function fired when the login button is pressed.\n     *\n     * Setting up the Lock UI\n     * The lock.show() function sends the user's log-in details to the\n     * Auth0 service securely (using OAuth2/ OpenID connect)\n     * The response of the post request is a JWT and user profile details.\n     * These are stored in localStorage for later use.\n     * User then redirected to the dashboardComponent (child component of\n     * app.component)\n     */\n    login(){\n        console.log(\"Initializing the Auth0 form.\");\n        //this._parent.userLoggedIn = true;\n        this.lock.show(this.options,(err: string, profile: string, id_token: string) => {\n            if (err) {\n                throw new Error(err);\n            }\n\n            localStorage.setItem('profile', JSON.stringify(profile));\n            localStorage.setItem('id_token', id_token);\n            console.log(\n                this.jwtHelper.decodeToken(id_token),\n                this.jwtHelper.getTokenExpirationDate(id_token)\n            );\n            var userId: string = JSON.parse(localStorage.getItem('profile')).user_id;\n\n            // Get user details (joined classes, questions asked) from database\n            this.httpService.getUserDetails(userId).subscribe(\n                data => localStorage.setItem('user', JSON.stringify(data)),\n                error => alert(error),\n                () => console.log(\"get user details success\")\n            );\n            this.userLoggedIn = true;\n            console.log(\"Login successful, redirecting to the dashboard.\");\n            this._router.navigate(['Dashboard']);\n        });\n    }\n\n    /**\n     * Function fired when the logout button is pressed. Deletes the user's JWT\n     * and profile from local storage, sets the logged in boolean as false so the\n     * login button is redisplayed and redirects to the landing page of the site.\n     */\n    logout() {\n        console.log('User has logged out. Redirect to landing page.');\n        localStorage.removeItem('profile');\n        localStorage.removeItem('id_token');\n        this.userLoggedIn = false;\n        this._router.navigate(['Landing']);\n    }\n\n    /**\n     * Utility function to change the state of the userLoggedIn\n     * boolean which controls the state of the Login/Logout buttons\n     * on the nav bar. This\n     */\n    setLoggedOut(){\n        this.userLoggedIn = false;\n    }\n\n    /**\n     * Utility function to change the state of the userLoggedIn\n     * boolean which controls the state of the Login/Logout buttons\n     * on the nav bar. This\n     */\n    setLoggedIn(){\n        this.userLoggedIn = true;\n        this.userProfile  = JSON.parse(localStorage.getItem('profile')).picture;\n    }\n\n    /**\n     * Non-Authenticated api request example\n     */\n    getThing() {\n        this.http.get('/ping')\n            .subscribe(\n                data => console.log(data.json()),\n                err => console.log(err),\n                () => console.log('Complete')\n            );\n    }\n\n    /**\n     * Authenticated api request example:\n     * ToDo: Save the user's id in the database - api request to express route\n     */\n    getSecretThing() {\n        this.authHttp.get('/secured/ping')\n            .subscribe(\n                data => console.log(data.json()),\n                err => console.log(err),\n                () => console.log('Complete')\n            );\n    }\n\n    /**\n     * Not sure what this does yet.. will come back to it!\n     */\n    tokenSubscription() {\n        this.authHttp.tokenStream.subscribe(\n            data => console.log(data),\n            err => console.log(err),\n            () => console.log('Complete')\n        );\n    }\n\n    /**\n     * Helper method for getting the JWT from storage and getting\n     * various details from it such as the expiration etc.\n     * Can call for a refresh of the token if going to be expired and\n     * user is still logged in - ToDo: Refresh token\n     */\n    useJwtHelper() {\n        var token = localStorage.getItem('id_token');\n\n        console.log(\n            this.jwtHelper.decodeToken(token),\n            this.jwtHelper.getTokenExpirationDate(token),\n            this.jwtHelper.isTokenExpired(token)\n        );\n    }\n}"],"sourceRoot":"/source/"}