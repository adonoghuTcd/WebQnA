{"version":3,"sources":["boot.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;YAQA;;;;eAIG;YAEH,mBAAS,CAAC,4BAAY,EAAE;gBACtB,qBAAc;gBACd,yBAAgB;gBAChB,cAAO,CAAC,uBAAQ,EAAE;oBAChB,UAAU,EAAE,UAAC,IAAI;wBACf,MAAM,CAAC,IAAI,uBAAQ,CAAC,IAAI,yBAAU,EAAE,EAAE,IAAI,CAAC,CAAC;oBAC9C,CAAC;oBACD,IAAI,EAAE,CAAC,WAAI,CAAC;iBACb,CAAC;gBACF,cAAO,CAAC,sBAAa,EAAE,EAAC,QAAQ,EAAC,GAAG,EAAC,CAAC;gBACtC,cAAO,CAAC,yBAAgB,EAAE,EAAE,QAAQ,EAAE,6BAAoB,EAAE,CAAC;aAC9D,CAAC,CAAC","file":"boot.js","sourcesContent":["import {bootstrap} from 'angular2/platform/browser';\nimport {Component, View, provide} from 'angular2/core';\nimport {RouteConfig, Router, APP_BASE_HREF, ROUTER_PROVIDERS, ROUTER_DIRECTIVES, CanActivate} from 'angular2/router';\nimport {HTTP_PROVIDERS, Http} from 'angular2/http';\nimport {AuthHttp, AuthConfig, tokenNotExpired, JwtHelper} from 'angular2-jwt';\nimport {AppComponent} from \"./app.component\";\nimport {PathLocationStrategy, LocationStrategy} from 'angular2/router';\n\n/**\n * Loads the root component (AppComponent).\n * Sets the base url as '/'\n * and the directives used?\n */\n\nbootstrap(AppComponent, [\n  HTTP_PROVIDERS,\n  ROUTER_PROVIDERS,\n  provide(AuthHttp, { \n    useFactory: (http) => {\n      return new AuthHttp(new AuthConfig(), http);\n    },\n    deps: [Http]\n  }),\n  provide(APP_BASE_HREF, {useValue:'/'}),\n  provide(LocationStrategy, { useClass: PathLocationStrategy })\n]);\n"],"sourceRoot":"/source/"}