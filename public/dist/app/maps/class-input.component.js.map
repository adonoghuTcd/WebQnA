{"version":3,"sources":["class-input.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAyBA;gBAII;;;;mBAIG;gBACH,6BAAkE,OAA0B,EACxE,WAAwB;oBADsB,YAAO,GAAP,OAAO,CAAmB;oBACxE,gBAAW,GAAX,WAAW,CAAa;oBAP5C,cAAS,GAAU,EAAE,CAAC;gBAOyB,CAAC;gBAOhD,sCAAQ,GAAR,cAAY,CAAC;gBAEb;;;;mBAIG;gBACH,sCAAQ,GAAR;oBACI,IAAI,CAAC,QAAQ,GAAG,IAAI,iBAAO,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC;oBAEvG,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACzC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,SAAS,CACrC,UAAA,IAAI,IAAI,OAAA,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,EAAjC,CAAiC,EACzC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,KAAK,CAAC,EAAZ,CAAY,EACrB,cAAM,OAAA,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,EAA1B,CAA0B,CACnC,CAAC;oBACF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAC3C,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;oBACpB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;oBACvB,IAAI,CAAC,OAAO,CAAC,gBAAgB,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;gBACnE,CAAC;gBAnDL;oBAAC,gBAAS,CAAC;wBACP,QAAQ,EAAE,aAAa;wBACvB,SAAS,EAAE,CAAC,0BAAW,CAAC;qBAC3B,CAAC;oBAED,WAAI,CAAC;wBACF,WAAW,EAAE,wBAAwB;qBACxC,CAAC;+BAgBe,aAAM,CAAC,iBAAU,CAAC,cAAM,OAAA,yCAAkB,EAAlB,CAAkB,CAAC,CAAC;;uCAhB3D;gBA6CF,0BAAC;YAAD,CAtCA,AAsCC,IAAA;YAtCD,qDAsCC,CAAA","file":"class-input.component.js","sourcesContent":["/**\n * Created by kfraser on 27/02/2016.\n */\nimport {Component, View, Inject, forwardRef, OnInit} from 'angular2/core';\nimport {CORE_DIRECTIVES, FORM_DIRECTIVES} from 'angular2/common';\nimport {Alert, DROPDOWN_DIRECTIVES} from \"ng2-bootstrap/ng2-bootstrap\";\nimport {DashboardComponent} from \"./dashboard.component\";\nimport {Lecture} from \"./models/lecture\";\nimport {HTTPService} from \"./services/http-service\";\nimport {ClassListComponent} from \"./class-list.component\";\n\n@Component({\n    selector: 'class-input',\n    providers: [HTTPService]\n})\n\n@View({\n    templateUrl: 'views/class_input.html'\n})\n\n/**\n * The form to create a new class. TODO: User has an auth field\n * TODO: this is so the lecturers and students can be distinguished - only give\n * TODO: the lecturers the power to use this component.\n */\nexport class ClassInputComponent implements OnInit {\n\n\n    className:string = \"\";\n    /**\n     * Inject the dashboard to change the toggle button for viewing the\n     * class creation well (disappears on submission).\n     * @param _parent - Dashboard component\n     */\n    constructor(@Inject(forwardRef(() => ClassListComponent)) private _parent:ClassListComponent,\n                private httpService: HTTPService) {}\n\n    /**\n     * Lecture is synonymous with class\n     */\n    newClass: Lecture;\n\n    ngOnInit() {}\n\n    /**\n     * Used to create a new class - TODO: change from profile to user when user is completed\n     * Creator of the class is added as a participant.\n     * @param value - input class name\n     */\n    addClass(){\n        this.newClass = new Lecture(this.className, [JSON.parse(localStorage.getItem('profile')).user_id], []);\n\n        var json = JSON.stringify(this.newClass);\n        this.httpService.addClass(json).subscribe(\n            data => console.log(JSON.stringify(data)),\n            error => alert(error),\n            () => console.log(\"Class added\")\n        );\n        console.log(JSON.stringify(this.newClass));\n        this.className = \"\";\n        this._parent.refresh();\n        this._parent.isCollapsedClass = !this._parent.isCollapsedClass;\n    }\n}"],"sourceRoot":"/source/"}