{"version":3,"sources":["dashboard.component.ts"],"names":[],"mappings":"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","file":"dashboard.component.js","sourcesContent":["import {Component, View, Inject, forwardRef, OnInit} from 'angular2/core';\r\nimport {RouteConfig, ROUTER_DIRECTIVES} from 'angular2/router';\r\nimport {tokenNotExpired} from 'angular2-jwt';\r\nimport {CanActivate} from \"angular2/router\";\r\nimport {RouteParams} from \"angular2/router\";\r\nimport {Router} from \"angular2/router\";\r\nimport {CORE_DIRECTIVES, FORM_DIRECTIVES } from \"angular2/common\";\r\nimport {AppComponent} from \"./app.component\";\r\nimport {Alert, Collapse} from \"ng2-bootstrap/ng2-bootstrap\";\r\nimport {QuestionFeedComponent} from \"./question-feed.component\";\r\nimport {QuestionInputFormComponent} from \"./question-form.component\";\r\nimport {ClassInputComponent} from \"./class-input.component\";\r\nimport {HTTPService} from \"./services/http-service\";\r\nimport {Question} from \"./models/question\";\r\nimport {BUTTON_DIRECTIVES} from \"ng2-bootstrap/ng2-bootstrap\"\r\nimport {OnlineUser} from \"./models/online-user\";\r\n\r\ndeclare var io: any;\r\n\r\n@Component({\r\n    selector: 'dashboard',\r\n    providers: [HTTPService]\r\n})\r\n\r\n@View({\r\n    templateUrl: 'views/dashboard.html',\r\n    directives: [ ROUTER_DIRECTIVES, Alert, QuestionFeedComponent,\r\n        ClassInputComponent , QuestionInputFormComponent, Collapse,\r\n        BUTTON_DIRECTIVES, CORE_DIRECTIVES, FORM_DIRECTIVES ]\r\n})\r\n\r\n/**\r\n *\r\n * This means the user can only navigate to this route if they have a JWT and\r\n * it hasn't expired yet. Not too sure how to refresh this and manage the lifecycle\r\n * (could be checking if a JWT is in localStorage? must confirm)\r\n */\r\n//@CanActivate(() => tokenNotExpired())\r\n\r\n/**\r\n * This is the main class for application - the dashboard.\r\n * Here the comment feed is visible to the logged in user.\r\n * The user can post comments, answer questions, join classes etc.\r\n */\r\nexport class DashboardComponent implements OnInit {\r\n\r\n    /**\r\n     * This is the JWT for the user's authentication\r\n     */\r\n    id_token: string;\r\n    emptyFeed: boolean = true;\r\n\r\n    public classes:string[] = [];\r\n    public userQuestionIds: string[];\r\n    public selectedClass:string;\r\n    questions: Question[];\r\n\r\n    public isCollapsedQuestion:boolean = true;\r\n    public isCollapsedClass:boolean = true;\r\n    newUser: {username: string, picture: string};\r\n\r\n    /**\r\n     * List of online users - update using socket.io\r\n     */\r\n    socket = null;\r\n    onlineUsers: OnlineUser[] = [];\r\n\r\n    /**\r\n     * For the constructor must inject the parent \"loginComponent\" as\r\n     * need to change parent variables which control button states (e.g.\r\n     * the login/logout button in this case)\r\n     * @param _parent\r\n     */\r\n    constructor(@Inject(forwardRef(() => AppComponent)) private _parent:AppComponent,\r\n                private httpService: HTTPService) {\r\n        console.log(\"Set user as logged in (button state)\");\r\n        _parent.setLoggedIn();\r\n        this.socket = io('/');\r\n        this.socket.on('addUser', function(user){\r\n            console.log('Add user from server: '+ user);\r\n            this.onlineUsers.push(user);\r\n        }.bind(this));\r\n        this.socket.on('removeUser', function(user){\r\n            console.log('Remove user from server: '+ user);\r\n        }.bind(this));\r\n        var newUserOnline = new OnlineUser(JSON.parse(localStorage.getItem('profile')).name,\r\n            JSON.parse(localStorage.getItem('profile')).picture);\r\n        this.socket.emit('userLogin', newUserOnline);\r\n    }\r\n\r\n    /**\r\n     * This is called in child component instead of onInit because\r\n     * it's called when this component is routed to while onInit isn't\r\n     * (onInit may only be activated when the component is created? not\r\n     * sure must come back to this.. there were issues on the angular2 forum)\r\n     * @param next\r\n     * @param prev\r\n     */\r\n    ngOnInit() {\r\n        console.log(\"Navigated to dashboard\");\r\n        this.id_token = localStorage.getItem('id_token');\r\n\r\n        // populate the class dropdown box and load the question feed\r\n        this.getClassList();\r\n        // get all user questions\r\n        this.userQuestionIds = JSON.parse(localStorage.getItem('user')).questions;\r\n    }\r\n\r\n    classChange(value:string){\r\n        console.log(\"changed\");\r\n        console.log(value);\r\n        this.selectedClass = value;\r\n        this.getQuestions();\r\n    }\r\n\r\n    getClassList(){\r\n        var classListArray = [];\r\n        this.httpService.getAllClasses().subscribe(\r\n            data => classListArray = JSON.parse(JSON.stringify(data)),\r\n            error => alert(error),\r\n            () => this.populateClassDropdown(classListArray)\r\n        );\r\n    }\r\n\r\n    populateClassDropdown(classListArray:JSON[]){\r\n        this.classes = [];\r\n        for(var item of classListArray){\r\n            this.classes.push(JSON.parse(JSON.stringify(item)).name);\r\n        }\r\n        this.getQuestions();\r\n    }\r\n\r\n    getQuestions(){\r\n        var questionListArray = [];\r\n        this.httpService.getQuestion(this.selectedClass).subscribe(\r\n            data => questionListArray = JSON.parse(JSON.stringify(data)),\r\n            error => alert(error),\r\n            () => this.populateFeed(questionListArray)\r\n        );\r\n    }\r\n\r\n    populateFeed(questionArray: JSON[]){\r\n        this.questions = [];\r\n        for(var item of questionArray){\r\n            console.log((JSON.parse(JSON.stringify(item)).classid));\r\n            var question = new Question(\r\n                (JSON.parse(JSON.stringify(item)).classid),\r\n                (JSON.parse(JSON.stringify(item)).question),\r\n                (JSON.parse(JSON.stringify(item)).summary),\r\n                (JSON.parse(JSON.stringify(item)).choices),\r\n                (JSON.parse(JSON.stringify(item)).answers),\r\n                (JSON.parse(JSON.stringify(item)).userid),\r\n                (JSON.parse(JSON.stringify(item)).date),\r\n                (JSON.parse(JSON.stringify(item)).type),\r\n                (JSON.parse(JSON.stringify(item)).anonymous),\r\n                (JSON.parse(JSON.stringify(item)).username),\r\n                (JSON.parse(JSON.stringify(item)).picture));\r\n            this.questions.push(question);\r\n        }\r\n        if(this.questions.length > 0){\r\n            this.emptyFeed = false;\r\n        }\r\n        else{\r\n            this.emptyFeed = true;\r\n        }\r\n    }\r\n}"],"sourceRoot":"/source/"}