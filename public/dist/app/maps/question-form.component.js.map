{"version":3,"sources":["question-form.component.ts"],"names":[],"mappings":"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","file":"question-form.component.js","sourcesContent":["\r\n/**\r\n * Created by kfraser on 24/02/2016.\r\n */\r\nimport {Component, View, forwardRef, Inject} from 'angular2/core';\r\nimport {Http, Response, Headers} from 'angular2/http';\r\nimport {Question} from \"./models/question\";\r\nimport {HTTPService} from \"./services/http-service\";\r\nimport {DatePipe} from \"angular2/common\";\r\nimport {DashboardComponent} from \"./dashboard.component\";\r\n\r\ndeclare var io: any;\r\n\r\n@Component({\r\n    selector: 'question-input-form',\r\n    providers: [HTTPService],\r\n    inputs: ['selectedClass']\r\n})\r\n\r\n@View({\r\n    templateUrl: 'views/question_input_form.html',\r\n    directives: []\r\n})\r\n\r\n/**\r\n * This is a default component - intentionally empty (including the\r\n * html) as it's needed when a child must have a terminal state.\r\n * TODO: get user id from user when user model is updated\r\n */\r\nexport class QuestionInputFormComponent{\r\n\r\n    public types:string[] = [\"Free-text\", \"Multi-choice\"];\r\n    public today:Date = new Date();\r\n    selectedClass: string;\r\n\r\n    socket = null;\r\n\r\n    questionModel = new Question(this.selectedClass,\r\n        \"\",\r\n        \"\",\r\n        [],\r\n        [],\r\n        JSON.parse(localStorage.getItem('profile')).user_id,\r\n        this.today.toString(),\r\n        this.types[0],\r\n        \"\");\r\n\r\n\r\n    constructor(@Inject(forwardRef(() => DashboardComponent)) private _parent:DashboardComponent,\r\n                private http: Http, private httpService: HTTPService){\r\n\r\n        this.selectedClass = this._parent.selectedClass;\r\n\r\n        this.socket = io('/');\r\n        this.socket.on('update', function(){\r\n            console.log('Message from server: question feed to be updated');\r\n            this._parent.getQuestions();\r\n        }.bind(this));\r\n    }\r\n\r\n    submitted = false;\r\n\r\n    onSubmit(){\r\n        this.submitted = true;\r\n\r\n        this.today = new Date();\r\n        console.log(this.questionModel);\r\n        console.log(this.selectedClass);\r\n        this.questionModel.classid = this.selectedClass;\r\n\r\n        var json = JSON.stringify(this.questionModel);\r\n        console.log(json);\r\n        this.httpService.addQuestion(json).subscribe(\r\n            data => console.log(JSON.stringify(data)),\r\n            error => alert(error),\r\n            () => console.log(\"post question success\")\r\n        );\r\n        console.log(JSON.stringify(this.questionModel));\r\n\r\n        this.questionModel = new Question(this.selectedClass,\r\n            \"\",\r\n            \"\",\r\n            [],\r\n            [],\r\n            JSON.parse(localStorage.getItem('profile')).user_id,\r\n            this.today.toString(),\r\n            this.types[0],\r\n            \"\");\r\n\r\n        this.socket.emit('update', 'question');\r\n        this._parent.isCollapsedQuestion = !this._parent.isCollapsedQuestion;\r\n        this._parent.getQuestions();\r\n    }\r\n\r\n}"],"sourceRoot":"/source/"}